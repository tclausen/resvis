<template>
<div>
  <v-container fluid>
    <v-layout row wrap>
      <v-flex xs12 mt-0>
        <v-btn color="primary" v-on:click="refresh">
          Refresh
        </v-btn>
        <v-dialog v-model="dialog" max-width="500px">
          <v-btn color="primary" dark slot="activator" class="mb-2">New Item</v-btn>
          <v-card>
            <v-card-title>
              <span class="headline">Edit restaurant</span>
            </v-card-title>
            <v-card-text>
              <v-container grid-list-md>
                <v-layout wrap>
                  <v-flex xs12 sm6 md4>
                    <v-text-field label="Name" v-model="editedItem.name"></v-text-field>
                  </v-flex>
                </v-layout>
              </v-container>
            </v-card-text>
            <v-card-actions>
              <v-spacer></v-spacer>
              <v-btn color="blue darken-1" flat @click.native="close">Cancel</v-btn>
              <v-btn color="blue darken-1" flat @click.native="save">Save</v-btn>
            </v-card-actions>
          </v-card>
        </v-dialog>
      </v-flex>
    </v-layout>
  </v-container>
  <v-data-table
     :headers="headers"
     :items="items"
     hide-actions
     class="elevation-1"
     >
    <template slot="items" slot-scope="props">
      <td>{{ props.item.id }}</td>
      <td>{{ props.item.name }}</td>
      <td>{{ props.item.address.street }}</td>
      <td>{{ props.item.address.city }}</td>
      <td>{{ props.item.address.country }}</td>
      <td class="justify-center layout px-0">
        <v-btn icon class="mx-0" @click="editItem(props.item)">
          <v-icon color="teal">edit</v-icon>
        </v-btn>
        <v-btn icon class="mx-0" @click="deleteItem(props.item)">
          <v-icon color="pink">delete</v-icon>
        </v-btn>
      </td>
    </template>
  </v-data-table>
</div>
</template>

<script>
import axios from 'axios'
export default {
  name: 'AdminRestaurants',
  data () {
    return {
      error: "",
      headers: [
        { text: 'Id', align: 'left', sortable: true, value: 'id' },
        { text: 'Name', align: 'left', sortable: true, value: 'name' },
        { text: 'Street', align: 'left', sortable: true, value: 'Street' },
        { text: 'City', align: 'left', sortable: true, value: 'City' },
        { text: 'Country', align: 'left', sortable: true, value: 'country' },
        { text: 'Actions', align: 'left', sortable: false },
      ],
      items: [],
      dialog: false,
      editedIndex: -1,
      editedItem: {
        name: '',
        address: '',
      },
      defaultItem: {
        name: '',
        address: '',
      }
    }
  },
  created: function() {
    this.getRestaurants()
  },
  methods: {
    getRestaurants() {
      let config = { headers: { "Token": this.$store.state.token } }
      axios.get('http://tocsig.ddns.net:3000/api/restaurant', config)
        .then((resp) => {
          this.error = ""
          console.log("data:", resp.data)
          var items = []
          for(var key in resp.data) {
            items.push(resp.data[key])
          }
          this.items = items
        })
        .catch((err) => {
          console.log(err.response)
          this.error = "Can't load database list: " + err.response.data
        });
    },
    refresh() {
      this.getRestaurants()
    },
    close () {
      this.dialog = false
      setTimeout(() => {
        this.editedItem = Object.assign({}, this.defaultItem)
        this.editedIndex = -1
      }, 300)
    },
    save () {
      if (this.editedIndex > -1) {
        Object.assign(this.items[this.editedIndex], this.editedItem)
      } else {
        this.items.push(this.editedItem)
      }
      this.close()
    }
  }
}
</script>
  
<style>
</style>
  
